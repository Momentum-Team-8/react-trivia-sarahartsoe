{"ast":null,"code":"var _jsxFileName = \"/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getQuestions } from \"../api\";\nimport he from \"he\";\nimport { AnswerChoices } from './AnswerChoices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Questions = props => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  const [questions, setQuestions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [answered, setAnswered] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  const {\n    selectedCategory,\n    setSelectedCategory\n  } = props;\n\n  const handleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? \"Questions are loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onClick: () => setSelectedCategory(null),\n        children: \"Back to all Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), questions.map(question => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"tile is-ancestor\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"tile is-4 is-parent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"tile is-child box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: he.decode(question.question)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select your answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(AnswerChoices, {\n                answers: {\n                  correctAnswer: question.correct_answer,\n                  incorrectAnswers: question.incorrect_answers\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), expanded ? \"Hide Answer\" : \"Show Answer\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExpanded,\n              class: \"card-header-icon\",\n              \"aria-label\": \"more options\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"icon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-question-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), expanded && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.correct_answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, void 0, false)]\n          }, question.question, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, question.question, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, question.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n}; // {question.incorrect_answers.map((answer) => {\n//   let shuffledAnswers \n//     return (\n//       <button\n//         className=\"guess\"\n//         class=\"button is-primary is-light is-rounded\"\n//       >\n//         {answer}\n//       </button>\n//     );\n//   })}\n\n_s(Questions, \"B1bAshqLYXfIb0l4cTx6T1vmgWQ=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js"],"names":["React","useEffect","useState","getQuestions","he","AnswerChoices","Questions","props","expanded","setExpanded","questions","setQuestions","loading","setLoading","answered","setAnswered","correct","setCorrect","selectedCategory","setSelectedCategory","handleExpanded","then","data","name","map","question","decode","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getQuestions } from \"../api\";\nimport he from \"he\";\nimport { AnswerChoices } from './AnswerChoices'\n\nexport const Questions = (props) => {\n  const [expanded, setExpanded] = useState(false);\n  const [questions, setQuestions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [answered, setAnswered] = useState(false)\n  const [correct, setCorrect] = useState(false)\n  const { selectedCategory, setSelectedCategory } = props;\n  const handleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then((data) => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n\n  return loading ? (\n    \"Questions are loading\"\n  ) : (\n    <>\n      <div className=\"\">\n        <button\n          className=\"button is-primary\"\n          onClick={() => setSelectedCategory(null)}\n        >\n          Back to all Categories\n        </button>\n        <h2>{selectedCategory.name}</h2>\n      </div>\n      {questions.map((question) => {\n        return (\n          <div key={question.question} class=\"tile is-ancestor\">\n            <div key={question.question} class=\"tile is-4 is-parent\">\n              <div key={question.question} class=\"tile is-child box\">\n                <p>{he.decode(question.question)}</p>\n                <p>Select your answer:</p>\n                <div>\n                  <AnswerChoices answers={{\n                    correctAnswer: question.correct_answer,\n                    incorrectAnswers: question.incorrect_answers\n                  }}/>\n                </div>\n                {expanded ? \"Hide Answer\" : \"Show Answer\"}\n                <button\n                  onClick={handleExpanded}\n                  class=\"card-header-icon\"\n                  aria-label=\"more options\"\n                >\n                  <span class=\"icon\">\n                    <i class=\"fas fa-question-circle\" />\n                  </span>\n                </button>\n                {expanded && (\n                  <>\n                    <p>{question.correct_answer}</p>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\n// {question.incorrect_answers.map((answer) => {\n//   let shuffledAnswers \n//     return (\n//       <button\n//         className=\"guess\"\n//         class=\"button is-primary is-light is-rounded\"\n//       >\n//         {answer}\n//       </button>\n//     );\n//   })}\n"]},"metadata":{},"sourceType":"module"}