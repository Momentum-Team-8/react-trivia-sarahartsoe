{"ast":null,"code":"var _jsxFileName = \"/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CountryData = props => {\n  _s();\n\n  const [countryData, setCountryData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCountry\n  } = props;\n  useEffect(() => {\n    getCountryData(selectedCountry).then(data => {\n      setCountryData(data);\n      setLoading(false);\n    });\n  }, [selectedCountry]);\n  return loading ? 'Country data is loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"is-size-4 country has-text-weight-semibold\",\n        children: selectedCountry[0].toUpperCase() + selectedCountry.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        children: \"Back to Country List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), countryData.map(data => {\n      const date = new Date(data.Date);\n      const formattedDate = date.getMonth() + '/' + date.getDate() + '/' + date.getFullYear();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [data.Date && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-text-weight-bold\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 20\n          }, this), \" \", formattedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-text-weight-bold\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 18\n          }, this), \" \", data.Status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-text-weight-bold\",\n            children: \"Cases:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 18\n          }, this), data.Cases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, formattedDate, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(CountryData, \"IfL1W1TRVMgQOpvr0tdswIHBbDc=\");\n\n_c = CountryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryData\");","map":{"version":3,"sources":["/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js"],"names":["React","useEffect","useState","getQuestions","CountryData","props","countryData","setCountryData","loading","setLoading","selectedCountry","getCountryData","then","data","toUpperCase","slice","map","date","Date","formattedDate","getMonth","getDate","getFullYear","marginBottom","Status","Cases"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAsBL,KAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,CAACD,eAAD,CAAd,CAAgCE,IAAhC,CAAqCC,IAAI,IAAI;AAC3CN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,eAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,yBADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,4CAAb;AAAA,kBAA2DE,eAAe,CAAC,CAAD,CAAf,CAAmBI,WAAnB,KAAmCJ,eAAe,CAACK,KAAhB,CAAsB,CAAtB;AAA9F;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,SAAS,EAAC,mBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGT,WAAW,CAACU,GAAZ,CAAiBH,IAAD,IAAU;AACzB,YAAMI,IAAI,GAAG,IAAIC,IAAJ,CAASL,IAAI,CAACK,IAAd,CAAb;AACA,YAAMC,aAAa,GAAGF,IAAI,CAACG,QAAL,KAAkB,GAAlB,GAAwBH,IAAI,CAACI,OAAL,EAAxB,GAAyC,GAAzC,GAA+CJ,IAAI,CAACK,WAAL,EAArE;AACA,0BACE;AAAyB,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAhC;AAAA,mBACGV,IAAI,CAACK,IAAL,iBACC;AAAA,kCAAG;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,OAAwDC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGE;AAAA,kCAAG;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,OAA0DN,IAAI,CAACW,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,kCAAG;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAAwDX,IAAI,CAACY,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAUN,aAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAXA,CAVH;AAAA,kBAHJ;AA2BD,CAxCM;;GAAMf,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getQuestions } from '../api'\n\nexport const CountryData = (props) => {\n  const [countryData, setCountryData] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCountry } = props\n\n  useEffect(() => {\n    getCountryData(selectedCountry).then(data => {\n      setCountryData(data)\n      setLoading(false)\n    })\n  }, [selectedCountry])\n\n  return loading\n    ? 'Country data is loading'\n    : (\n      <>\n        <div className='section-header'>\n          <p className='is-size-4 country has-text-weight-semibold'>{selectedCountry[0].toUpperCase() + selectedCountry.slice(1)}</p>\n          {/* notice how I am only using variable name for my handleSort function with no parens */}\n          <button\n            className='button is-primary'\n          >\n            Back to Country List\n          </button>\n        </div>\n        {countryData.map((data) => {\n          const date = new Date(data.Date)\n          const formattedDate = date.getMonth() + '/' + date.getDate() + '/' + date.getFullYear()\n          return (\n            <div key={formattedDate} style={{ marginBottom: '10px' }}>\n              {data.Date &&\n                <p><span className='has-text-weight-bold'>Date:</span> {formattedDate}</p>}\n              <p><span className='has-text-weight-bold'>Status:</span> {data.Status}</p>\n              <p><span className='has-text-weight-bold'>Cases:</span>{data.Cases}</p>\n            </div>\n          )\n        })}\n      </>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}