{"ast":null,"code":"var _jsxFileName = \"/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Questions = props => {\n  _s();\n\n  const [questions, setQuestions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n\n  const handleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Questions are loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        children: \"Back to all Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), questions.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"tile is-ancestor\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"tile is-4 is-parent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"tile is-child box\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 18\n            }, this)\n          }, data.question, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Questions, \"3Ct8MjQDPEQgJSESdlBS0UDO8jg=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js"],"names":["React","useEffect","useState","getQuestions","Questions","props","questions","setQuestions","loading","setLoading","selectedCategory","handleExpanded","setExpanded","expanded","then","data","name","map","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAuBL,KAA7B;;AACA,QAAMM,cAAc,GAAG,MAAM;AAC3BC,IAAAA,WAAW,CAAC,CAACC,QAAF,CAAX;AACD,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY,CAACO,gBAAD,CAAZ,CAA+BI,IAA/B,CAAoCC,IAAI,IAAI;AAC1CR,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,uBADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,mBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,kBAAKE,gBAAgB,CAACM;AAAtB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASGV,SAAS,CAACW,GAAV,CAAeF,IAAD,IAAU;AACvB,0BACE;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA,+BACI;AAAK,UAAA,KAAK,EAAC,qBAAX;AAAA,iCACA;AAAyB,YAAA,KAAK,EAAC,mBAA/B;AAAA,mCACC;AAAA,wBAAIA,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA;AADD,aAAUH,IAAI,CAACG,QAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA,CATH;AAAA,kBAHJ;AA0BD,CA1CM;;GAAMd,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getQuestions } from '../api'\n\nexport const Questions = (props) => {\n  const [questions, setQuestions] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCategory } = props\n  const handleExpanded = () => {\n    setExpanded(!expanded)\n  }\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Questions are loading'\n    : (\n      <>\n        <div className=\"\">\n          <button\n            className='button is-primary'\n          >\n            Back to all Categories\n          </button>\n          <h2>{selectedCategory.name}</h2>\n        </div>\n        {questions.map((data) => {\n          return (\n            <div class=\"tile is-ancestor\">\n                <div class=\"tile is-4 is-parent\">\n                <div key={data.question} class=\"tile is-child box\">\n                 <p>{data.question}</p>\n                 \n            </div>\n            </div>\n            </div>\n          )\n        })}\n      </>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}