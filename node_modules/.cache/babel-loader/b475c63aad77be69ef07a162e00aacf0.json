{"ast":null,"code":"var _jsxFileName = \"/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Questions = props => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  const [questions, setQuestions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory,\n    setSelectedCategory\n  } = props;\n\n  const handleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Questions are loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onClick: () => setSelectedCategory(null),\n        children: \"Back to all Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), questions.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"tile is-ancestor\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"tile is-4 is-parent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"tile is-child box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: he.decode(data.question)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select your answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), expanded ? 'Hide Answer' : 'Show Answer', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExpanded,\n              class: \"card-header-icon\",\n              \"aria-label\": \"more options\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"icon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-question-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), expanded && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.correct_answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this)\n            }, void 0, false)]\n          }, data.question, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, data.question, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, data.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Questions, \"wzF58ezjTcby8B4VABB8VrSI/lQ=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js"],"names":["React","useEffect","useState","getQuestions","Questions","props","expanded","setExpanded","questions","setQuestions","loading","setLoading","selectedCategory","setSelectedCategory","handleExpanded","then","data","name","map","he","decode","question","correct_answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEU,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CR,KAAlD;;AACA,QAAMS,cAAc,GAAG,MAAM;AAC3BP,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY,CAACS,gBAAD,CAAZ,CAA+BG,IAA/B,CAAoCC,IAAI,IAAI;AAC1CP,MAAAA,YAAY,CAACO,IAAD,CAAZ;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,uBADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,MAAMG,mBAAmB,CAAC,IAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBAAKD,gBAAgB,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGT,SAAS,CAACU,GAAV,CAAeF,IAAD,IAAU;AACvB,0BACE;AAAyB,QAAA,KAAK,EAAC,kBAA/B;AAAA,+BACE;AAAyB,UAAA,KAAK,EAAC,qBAA/B;AAAA,iCACE;AAAyB,YAAA,KAAK,EAAC,mBAA/B;AAAA,oCACE;AAAA,wBAAIG,EAAE,CAACC,MAAH,CAAUJ,IAAI,CAACK,QAAf;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGf,QAAQ,GAAG,aAAH,GAAmB,aAH9B,eAIE;AAAQ,cAAA,OAAO,EAAEQ,cAAjB;AAAiC,cAAA,KAAK,EAAC,kBAAvC;AAA0D,4BAAW,cAArE;AAAA,qCACE;AAAM,gBAAA,KAAK,EAAC,MAAZ;AAAA,uCACE;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,EASGR,QAAQ,iBACP;AAAA,qCACE;AAAA,0BAAIU,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,6BAVJ;AAAA,aAAUN,IAAI,CAACK,QAAf;AAAA;AAAA;AAAA;AAAA;AADF,WAAUL,IAAI,CAACK,QAAf;AAAA;AAAA;AAAA;AAAA;AADF,SAAUL,IAAI,CAACK,QAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD,KAtBA,CAPH;AAAA,kBAHJ;AAmCD,CApDM;;GAAMjB,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getQuestions } from '../api'\n\nexport const Questions = (props) => {\n  const [expanded, setExpanded] = useState(false)\n  const [questions, setQuestions] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCategory, setSelectedCategory } = props\n  const handleExpanded = () => {\n    setExpanded(!expanded)\n  }\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Questions are loading'\n    : (\n      <>\n        <div className=\"\">\n          <button className='button is-primary' onClick={() => setSelectedCategory(null)}>\n            Back to all Categories\n          </button>\n          <h2>{selectedCategory.name}</h2>\n        </div>\n        {questions.map((data) => {\n          return (\n            <div key={data.question} class=\"tile is-ancestor\">\n              <div key={data.question} class=\"tile is-4 is-parent\">\n                <div key={data.question} class=\"tile is-child box\">\n                  <p>{he.decode(data.question)}</p>\n                  <p>Select your answer:</p>\n                  {expanded ? 'Hide Answer' : 'Show Answer'}\n                  <button onClick={handleExpanded} class=\"card-header-icon\" aria-label=\"more options\">\n                    <span class=\"icon\">\n                      <i class=\"fas fa-question-circle\"></i>\n                    </span>\n                  </button>\n                  {expanded && (\n                    <>\n                      <p>{data.correct_answer}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}