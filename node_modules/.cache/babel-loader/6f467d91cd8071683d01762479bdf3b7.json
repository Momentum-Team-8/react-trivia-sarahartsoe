{"ast":null,"code":"var _jsxFileName = \"/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Questions = props => {\n  _s();\n\n  const [questions, setQuestions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Questions are loading' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: selectedCategory[0].toUpperCase() + selectedCategory.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        children: \"Back to all Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), questions.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [data.Date && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-text-weight-bold\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this), \" \", formattedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-text-weight-bold\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }, this), \" \", data.Status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-text-weight-bold\",\n            children: \"Cases:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }, this), data.Cases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, formattedDate, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Questions, \"3Ct8MjQDPEQgJSESdlBS0UDO8jg=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/sarahartsoe/Momentum-Assignments/react-trivia-sarahartsoe/trivia/src/components/Questions.js"],"names":["React","useEffect","useState","getQuestions","Questions","props","questions","setQuestions","loading","setLoading","selectedCategory","then","data","toUpperCase","slice","map","marginBottom","Date","formattedDate","Status","Cases"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAuBL,KAA7B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY,CAACO,gBAAD,CAAZ,CAA+BC,IAA/B,CAAoCC,IAAI,IAAI;AAC1CL,MAAAA,YAAY,CAACK,IAAD,CAAZ;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,uBADU,gBAGV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,EAAb;AAAA,kBAAiBE,gBAAgB,CAAC,CAAD,CAAhB,CAAoBG,WAApB,KAAoCH,gBAAgB,CAACI,KAAjB,CAAuB,CAAvB;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,mBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASGR,SAAS,CAACS,GAAV,CAAeH,IAAD,IAAU;AACvB,0BACE;AAAyB,QAAA,KAAK,EAAE;AAAEI,UAAAA,YAAY,EAAE;AAAhB,SAAhC;AAAA,mBACGJ,IAAI,CAACK,IAAL,iBACC;AAAA,kCAAG;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,OAAwDC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGE;AAAA,kCAAG;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,OAA0DN,IAAI,CAACO,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,kCAAG;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAAwDP,IAAI,CAACQ,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAUF,aAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CATH;AAAA,kBAHJ;AAwBD,CArCM;;GAAMd,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getQuestions } from '../api'\n\nexport const Questions = (props) => {\n  const [questions, setQuestions] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCategory } = props\n\n  useEffect(() => {\n    getQuestions(selectedCategory).then(data => {\n      setQuestions(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Questions are loading'\n    : (\n      <>\n        <div className=''>\n          <p className=''>{selectedCategory[0].toUpperCase() + selectedCategory.slice(1)}</p>\n          <button\n            className='button is-primary'\n          >\n            Back to all Categories\n          </button>\n        </div>\n        {questions.map((data) => {\n          return (\n            <div key={formattedDate} style={{ marginBottom: '10px' }}>\n              {data.Date &&\n                <p><span className='has-text-weight-bold'>Date:</span> {formattedDate}</p>}\n              <p><span className='has-text-weight-bold'>Status:</span> {data.Status}</p>\n              <p><span className='has-text-weight-bold'>Cases:</span>{data.Cases}</p>\n            </div>\n          )\n        })}\n      </>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}